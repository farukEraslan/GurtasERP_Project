// <auto-generated />
using System;
using Gurtas.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gurtas.Migrations
{
    [DbContext(typeof(GurtasContext))]
    [Migration("20221021203749_new_column_users")]
    partial class new_column_users
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Gurtas.DAL.Entities.MeasureTools", b =>
                {
                    b.Property<int>("ToolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToolId"), 1L, 1);

                    b.Property<string>("Accuracy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CalibrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CertificateNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MeasureRange")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Model")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NextCalibrationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ToolName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ToolId");

                    b.HasIndex("UserId");

                    b.ToTable("MeasureTools");

                    b.HasData(
                        new
                        {
                            ToolId = 1,
                            Accuracy = "0,01",
                            CalibrationDate = new DateTime(2022, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CertificateNumber = "22-4791",
                            Manufacturer = "Mitutoyo",
                            MeasureRange = "0-150",
                            Model = "",
                            ModifiedDate = new DateTime(2022, 10, 21, 23, 37, 49, 99, DateTimeKind.Local).AddTicks(1329),
                            NextCalibrationDate = new DateTime(2023, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecordDate = new DateTime(2022, 10, 21, 23, 37, 49, 99, DateTimeKind.Local).AddTicks(1327),
                            SerialNumber = "B22084436",
                            ToolName = "Kumpas",
                            Type = "Dijital",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Gurtas.DAL.Entities.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Gender = "Erkek",
                            ModifiedDate = new DateTime(2022, 10, 21, 23, 37, 49, 98, DateTimeKind.Local).AddTicks(9188),
                            Name = "Faruk",
                            Password = "qu4lity",
                            RecordDate = new DateTime(2022, 10, 21, 23, 37, 49, 98, DateTimeKind.Local).AddTicks(9179),
                            Surname = "Eraslan",
                            Username = "farukeraslan"
                        },
                        new
                        {
                            UserId = 2,
                            Gender = "Erkek",
                            ModifiedDate = new DateTime(2022, 10, 21, 23, 37, 49, 98, DateTimeKind.Local).AddTicks(9190),
                            Name = "Aykut",
                            Password = "own3r",
                            RecordDate = new DateTime(2022, 10, 21, 23, 37, 49, 98, DateTimeKind.Local).AddTicks(9190),
                            Surname = "Özgür",
                            Username = "aykutozgur"
                        },
                        new
                        {
                            UserId = 3,
                            Gender = "Erkek",
                            ModifiedDate = new DateTime(2022, 10, 21, 23, 37, 49, 98, DateTimeKind.Local).AddTicks(9193),
                            Name = "Ali",
                            Password = "pr0duction",
                            RecordDate = new DateTime(2022, 10, 21, 23, 37, 49, 98, DateTimeKind.Local).AddTicks(9192),
                            Surname = "Yılmaz",
                            Username = "aliyilmaz"
                        },
                        new
                        {
                            UserId = 4,
                            Gender = "Erkek",
                            ModifiedDate = new DateTime(2022, 10, 21, 23, 37, 49, 98, DateTimeKind.Local).AddTicks(9194),
                            Name = "Cem",
                            Password = "acc0ntting",
                            RecordDate = new DateTime(2022, 10, 21, 23, 37, 49, 98, DateTimeKind.Local).AddTicks(9194),
                            Surname = "Gülpınar",
                            Username = "cemgulpinar"
                        },
                        new
                        {
                            UserId = 5,
                            Gender = "Erkek",
                            ModifiedDate = new DateTime(2022, 10, 21, 23, 37, 49, 98, DateTimeKind.Local).AddTicks(9196),
                            Name = "Orhan",
                            Password = "purch4sing",
                            RecordDate = new DateTime(2022, 10, 21, 23, 37, 49, 98, DateTimeKind.Local).AddTicks(9195),
                            Surname = "Özgür",
                            Username = "orhanozgur"
                        },
                        new
                        {
                            UserId = 6,
                            Gender = "Erkek",
                            ModifiedDate = new DateTime(2022, 10, 21, 23, 37, 49, 98, DateTimeKind.Local).AddTicks(9197),
                            Name = "Faruk",
                            Password = "log1stic",
                            RecordDate = new DateTime(2022, 10, 21, 23, 37, 49, 98, DateTimeKind.Local).AddTicks(9197),
                            Surname = "Kurtoğlu",
                            Username = "farukkurtoglu"
                        });
                });

            modelBuilder.Entity("Gurtas.DAL.Entities.MeasureTools", b =>
                {
                    b.HasOne("Gurtas.DAL.Entities.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
